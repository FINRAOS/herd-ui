/*
* Copyright 2018 herd-ui contributors
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*     http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
import * as AWS from 'aws-sdk';
import * as Q from 'q';
import * as winston from 'winston';


export class S3Manager {

  private key;
  private body;
  private constants = require('../config/conf.e2e.json');

// Uncomment the following line to enable logging
// winston.level = 'debug';

// get credentials generated by the session-refresh util
// const credentials = new AWS.SharedIniFileCredentials();
  public bucketName = this.constants.shepherBucket;


  constructor() {
  }



  /**
   * Utility function to put an object on S3. This could be used to create files in order to register a BData or sample data.
   *
   * @param options The complete information required to be able to create and put an object on S3.
   *                "Key" : filename with dir path example   NODE_TEST/SAMPLE_FILES_2/test1.csv
   *                Example {"bucketName": "nameOfBucketOnS3", "key":"objectKey", "body": "objectContent"}
   */
  public createObject(options) {
    return Q.Promise(function (resolve, reject) {
      const s3 = new AWS.S3();

      const body = options.body === undefined ? 'Arbitrary content for a test object' : options.body;
      const params = {Bucket: this.bucketName, Key: options.key, Body: body, ServerSideEncryption: 'AES256'};

      winston.log('info', 'Requested POST on bucket {%s}', this.bucketName);
      s3.putObject(params, function (err, data) {
        if (err) {
          winston.log('error', 'Error uploading data: ', err, err.message);
          throw err.message;
        } else {
          winston.log('info', 'Successfully uploaded new object');
          resolve(data);
        }
      });

    });
  }

  /**
   * Utility function to list objects on S3. This could be used to find out if a certain object already exists.
   * @param options The complete information required to be able to perform a list objects operation on S3.
   *                Example {"bucketName": "nameOfBucketOnS3", "prefix": "prefix"}
   */
  public listFiles(options) {
    return Q.Promise(function (resolve, reject) {
      const s3 = new AWS.S3();
      const params = {
        Bucket: this.bucketName, Delimiter: '/', Prefix: options.prefix
      };

      s3.listObjects(params, function (err, data: any) {
        if (err) {
          winston.log('error', err.message);
          throw err.message;
        } else {
          winston.log('debug', data);
          resolve(data);
        }
      });
    });
  }

  public deleteObject(options) {
    return Q.Promise(function (resolve, reject) {
      const s3 = new AWS.S3();
      const params = {
        Bucket: this.bucketName, Key: options.key
      };

      s3.deleteObject(params, function (err, data) {
        if (err) {
          winston.log('error', err.message);
          throw err.message;
        } else {
          winston.log('info', 'successfully deleted object on s3');
          resolve(data);
        }
      });
    });
  }

  public S3MOption(key, body?) {
    this.key = key;
    this.body = body;
  }
}
